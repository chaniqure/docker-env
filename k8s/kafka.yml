kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: kafka
  namespace: user
  labels:
    app: kafka
  annotations:
    kubesphere.io/creator: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka
      annotations:
        kubesphere.io/creator: admin
    spec:
      containers:
        - name: kafka
          image: 'bitnami/kafka:3.3'
          ports:
            - name: tcp-9092
              containerPort: 9092
              protocol: TCP
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: 'zookeeper:2181'
            - name: ALLOW_PLAINTEXT_LISTENER
              value: 'yes'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: kafka
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
---
kind: Service
apiVersion: v1
metadata:
  name: kafka
  namespace: user
  labels:
    app: kafka
  annotations:
    kubesphere.io/creator: admin
spec:
  ports:
    - name: http-9092
      protocol: TCP
      port: 9092
      targetPort: 9092
      nodePort: 9092
  selector:
    app: kafka
  clusterIP: 10.233.60.211
  clusterIPs:
    - 10.233.60.211
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
